const LightChain = require('./LightChain');
const Transaction = require('./Transaction');
const BigNumber = require('bignumber.js');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–ª–æ–∫—á–µ–π–Ω–∞
console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WidePiper Light Blockchain...\n');
const chain = new LightChain();

// –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ—à–µ–ª—å–∫–∏
const wallets = {
    alice: 'wallet_alice',
    bob: 'wallet_bob',
    charlie: 'wallet_charlie'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
const printTransaction = (tx) => {
    console.log(`üìù –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:
    –û—Ç: ${tx.fromAddress}
    –ö–æ–º—É: ${tx.toAddress}
    –°—É–º–º–∞: ${tx.amount.toString()}
    –•–µ—à: ${tx.calculateHash().substring(0, 10)}...
    `);
};

// 1. –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...\n');

const transactions = [
    new Transaction(wallets.alice, wallets.bob, '100'),
    new Transaction(wallets.bob, wallets.charlie, '50'),
    new Transaction(wallets.charlie, wallets.alice, '25')
];

transactions.forEach(tx => {
    chain.addTransaction(tx);
    printTransaction(tx);
});

// 2. –ú–∞–π–Ω–∏–º –±–ª–æ–∫
console.log('2Ô∏è‚É£ –ú–∞–π–Ω–∏–º –Ω–æ–≤—ã–π –±–ª–æ–∫...\n');
chain.minePendingTransactions('miner_wallet');
console.log(`‚úÖ –ë–ª–æ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω
    –î–ª–∏–Ω–∞ —Ü–µ–ø–æ—á–∫–∏: ${chain.chain.length}
    –•–µ—à –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±–ª–æ–∫–∞: ${chain.getLatestBlock().hash.substring(0, 10)}...
`);

// 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å—ã
console.log('3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å—ã –∫–æ—à–µ–ª—å–∫–æ–≤...\n');
Object.entries(wallets).forEach(([name, address]) => {
    const balance = chain.getBalance(address);
    console.log(`üí∞ –ë–∞–ª–∞–Ω—Å ${name}: ${balance.toString()}`);
});

// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ü–µ–ø–æ—á–∫–∏
console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –±–ª–æ–∫—á–µ–π–Ω–∞...');
const isValid = chain.isChainValid();
console.log(`üîç –°—Ç–∞—Ç—É—Å: ${isValid ? '‚úÖ –í–∞–ª–∏–¥–Ω–∞' : '‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω–∞'}`);

// 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º zero-cost stability
console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º zero-cost stability...');
const lastBlock = chain.getLatestBlock();
console.log(`üìä DeltaL: ${lastBlock.deltaL.toString()}`);
console.log(`üîí Zero-cost stability: ${lastBlock.deltaL.isZero() ? '‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è' : '‚ùå –ù–∞—Ä—É—à–µ–Ω–∞'}`);

// 6. –í—ã–≤–æ–¥–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±–ª–æ–∫–∞
console.log('\n6Ô∏è‚É£ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±–ª–æ–∫–∞:');
console.log(JSON.stringify(lastBlock, null, 2));
